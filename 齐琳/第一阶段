1、
package email;

import static org.testng.Assert.assertEquals;

import org.testng.annotations.Listeners;
import org.testng.annotations.Test;

@Listeners(TestListener.class)

public class Demo {

	@Test
	public void test1(){
		assertEquals(1, 2);
		System.out.println("执行成功");
	}
	
}

2、
package email;

import java.util.Properties;

import javax.mail.Address;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

import org.testng.annotations.Test;

@SuppressWarnings("unused")
public class SendMail {
	String from="2304192948@qq.com";
	String auth_code="123456abcd";//授权码
	String to ="1797375404@qq.com";
	@Test
	public void sendMail() {
//		1、创建Properties对象
		Properties prop=new Properties();
		prop.put("mail.transport.protocol", "smtp");
		prop.put("mail.smtp.host", "smtp.126.com");
		prop.put("mail.smtp.auth", true);
//		2、Session对象，设置发件箱、授权码
		Session session=Session.getInstance(prop, new Authenticator() {
			@Override
			protected PasswordAuthentication getPasswordAuthentication() {
				// TODO Auto-generated method stub
				return new PasswordAuthentication(from,auth_code );
			}
			
		});
//		3、Message对象设置，发件人，收件人，主题，正文
		
		Message message=new MimeMessage(session);
		//或者子类的引用指向子类的对象
//		MimeMessage message=new MimeMessage(session);
		try {
			message.setFrom(new InternetAddress(from));
//			提示：可以把收件人地址配置在properties文件中
			message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
			message.setSubject("第一封邮件");
			message.setText("HELLO，尊敬的测试人员 ");
//			4、使用Transport发送
			Transport.send(message);
		
		} catch (AddressException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (MessagingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
}
3、
package email;

import static org.testng.Assert.assertEquals;

import java.awt.List;

import org.testng.ITestContext;
import org.testng.ITestNGMethod;
import org.testng.ITestResult;
import org.testng.TestListenerAdapter;
import org.testng.annotations.Test;

import com.webtest.core.BaseTest;

public class TestListener extends  TestListenerAdapter{
	
	@Override
	public void onTestSuccess(ITestResult tr) {
		System.out.println("成功的"+tr.getInstanceName()+"-"+tr.getName());
	}
	
	
	
	@Override
	public void onFinish(ITestContext testContext) {
		StringBuilder str = new StringBuilder();
		ITestNGMethod[] methods = this.getAllTestMethods();
		str.append("一共执行了"+methods.length+"条测试用例\n");
		java.util.List<ITestResult> fail = this.getFailedTests();
		
		str.append("一共失败了"+fail.size()+"\n");
		for(ITestResult f:fail){
			str.append(f.getInstanceName()+"-"+f.getName());
			
		}
		System.out.println(str.toString());
	}
		
}
